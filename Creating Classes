Import the library.
import matplotlib.pyplot as plt
%matplotlib inline

How to created a class:

1) class Circle(object):

2) class Circle(object):
        def_init_(self,radius,color):
          self.radius=radius;
          self.color=color;
        def add_radius(self+r):
          self.radius=self.radius+r
          return(self.radius)
        
3) def drawCircle(self):
      plt.gca().add_patch(plt.Circle((0.0), radius=self.radius, fc=self.color))
      plt.axis('scaled')
      plt.show()
      
Create an object RedCircle.
RedCircle=Circle(10,'red')

Find out the methods that can be used on the object RedCircle.
dir(RedCircle)

Print the object attribute radius.
RedCircle.radius

Print the object attribute color.
RedCircle.color

Set the object attribute radius.
RedCircle.radius=1
RedCircle.radius

Call the method drawCircle.
RedCircle.drawCircle()

Use the method add_radius() to increase the radius to 2 and then to 5.
print('Radius of object:',RedCircle.radius)
RedCircle.add_radius(2)
print('Radius of object of after applying the method add_radius(2):',RedCircle.radius)
RedCircle.add_radius(5)
print('Radius of object of after applying the method add_radius(5):',RedCircle.radius)

Create a blue circle with the given radius.
BlueCircle=Circle(radius=100)

Print the object attribute radius.
BlueCircle.radius

Print the object attribute color.
BlueCircle.color

Call the method drawCircle().
BlueCircle.drawCircle()

The Rectangle Class

Create a new rectangle class for creating a rectangle object.
class Rectangle(object):

    #Constructor
    def__init__(self, width=2, height=3, color='r'):
        self.height=height
        self.width=width
        self.color=color
        
     #Method
     def drawRectangle(self):
         plt.gca().add_patch(plt.Rectangle((0,0), self.width, self.height, fc=self.color))
         plt.axis('scaled')
         plt.show()
         
 Create a new object rectangle.
 SkinnyBlueRectangle=Rectangle(2,10,'blue')
 
 Print the object attribute height.
 SkinnyBlueRectangle.height
 
 Print the object attribute width.
 SkinnyBlueRectangle.width
 
 Print the object attribute color.
 SkinnyBlueRectangle.color
 
 Draw the object.
 
 Use the drawRectangle method to draw the shape.
 SkinnyBlueRectangle.drawRectangle()
 
 Create a new object rectangle.
 FatYellowRectangle=Rectangle(20,5,'yellow')

Lab Test

1) class analysedText(object):
         def__init__(self,text):
                pass
         def freqAll(self):
                pass
         def freq0f(self,word):
                pass
                
  Answer:
  
  class analysedText(object):
     def__init__(self,text):
        #remove puncuation
        formattedText=text.replace('.',' ').replace('!',' ').replace('?',' ').replace(',',' )
        
        #make text lowercase
        formattedText=formattedText.lower()
        
        self.fmtText=formattedText
     
      def freqAll(self):
         #split text into words
         wordList=self.fmtText.split(' ')
         
         # Create dictionary
         freqMap={}
         for word in set(wordList): #use set to remove duplicates in list
                freqMap[word]=wordList.count(word)
          return freqMap
          
        def freq0f(self,word):
                #get frequency map
                freqDict=self.freqAll()
                
                if word in freqDict:
                        return freqDict[word]
                else:
                        return 0
